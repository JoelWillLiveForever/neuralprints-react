{
    "dataset": {
        "title": "Датасет",
        "main-controls": {
            "buttons": {
                "dataset-management": {
                    "title": "Управление датасетом",
                    "items": {
                        "upload": "Загрузка",
                        "save": "Сохранить",
                        "clear": "Очистить"
                    },
                    "placeholder": "Название вашего датасета отобразится здесь."
                },
                "normalize": "Нормализация",
                "add-entry": "Добавить запись"
            }
        },
        "table": {
            "column_types": {
                "feature": "Признак",
                "target": "Целевой",
                "ignored": "Игнор."
            },
            "actions-column": {
                "title": "Действия",
                "buttons": {
                    "delete": "Удалить",
                    "save": "Сохранить",
                    "cancel": "Отмена"
                }
            }
        },
        "info-message": "Пожалуйста, загрузите ваш датасет в формате *.CSV!",
        "pagination-controls": {
            "page-size-selector": "Строк на странице: ",
            "rows-count": {
                "no-data": "Отображается строк 0-0 (нет данных)",
                "data": "Отображается строк",
                "out-of": "из"
            }
        }
    },
    "architecture": {
        "title": "Архитектура",
        "model-controls": {
            "title": "Управление моделью",
            "buttons": {
                "import": "Импорт",
                "export": "Экспорт"
            }
        },
        "tf-layers": "Слои TensorFlow",
        "dataset-splitting-options": {
            "title": "Опции разбивки датасета",
            "sliders": {
                "training-sample-size": "Размер обучающей выборки",
                "test-sample-size": "Размер тестовой выборки",
                "validation-sample-size": "Размер валидационной выборки"
            }
        },
        "ai-model-options": {
            "title": "Гиперпараметры модели ИИ",
            "comboboxes": {
                "loss-function": "Функция потерь",
                "optimizer": "Оптимизатор",
                "quality-metric": "Метрика качества"
            },
            "fields": {
                "number-of-training-epochs": "Количество эпох обучения",
                "mini-batch-size": "Размер мини-батча"
            }
        },
        "additional-options": {
            "title": "Дополнительные опции",
            "comboboxes": {
                "enable-dataset-normalization": {
                    "title": "Включить нормализацию датасета",
                    "values": {
                        "disable": "Выключено",
                        "enable": "Включено"
                    }
                }
            }
        }
    },
    "training": {
        "title": "Обучение",
        "status": {
            "title": "Статус",
            "epoch": "Эпоха"
        },
        "logs": "Логи",
        "performance-metrics": "Метрики качества",
        "controls": "Управление",
        "buttons": {
            "start-training": {
                "part-1": "ЗАПУСК",
                "part-2": "ОБУЧЕНИЯ"
            },
            "get-h5": "Экспорт *.H5",
            "get-keras": "Экспорт *.KERAS",
            "get-savedmodel": "Экспорт *.SavedModel",
            "get-py": "Экспорт *.PY",
            "get-exe": "Экспорт *.EXE"
        },
        "charts": "Графики"
    },
    "inference": {
        "title": "Инференс"
    },
    "preferences": {
        "title": "Настройки",
        "language": "Язык",
        "theme": "Тема",
        "themes": {
            "light": "Светлая",
            "dark": "Тёмная",
            "system": "Системная"
        },
        "languages": {
            "ru-ru": "Русский, Россия",
            "en-us": "Английский, США"
        }
    },
    "help": {
        "title": "Справка",
        "steps": {
            "step-1": {
                "title": "Шаг 1",
                "text": "Загрузите ваш датасет в формате CSV, содержащий входные признаки и целевую переменную. Убедитесь, что данные нормализованы, не содержат пустых строк и имеют корректную структуру. Назначьте каждому столбцу один из типов: «признак», «целевая переменная» или «игнорировать». Корректное назначение типов критически важно для последующей обработки и обучения модели."
            },
            "step-2": {
                "title": "Шаг 2",
                "text": "Перетащите слои из боковой панели на рабочую область, чтобы собрать архитектуру нейросети. Каждый слой можно настраивать, соединять, перемещать и удалять при необходимости. Обязательно добавьте слой \"Input\" — его количество нейронов должно соответствовать числу входных признаков. Финальный слой \"Output\" (обычно это \"Dense\") тоже должен быть правильно сконфигурирован: число нейронов зависит от решаемой задачи (например, бинарная или многоклассовая классификация). Также на этом этапе вы можете задать параметры обучения: количество эпох, функции потерь, метрики и пропорции разбиения на обучающую, валидационную и тестовую выборки. Дополнительно, в боковой панели доступна кнопка \"Экспорт\", с помощью которой можно сохранить архитектуру и гиперпараметры в виде JSON-файла. При необходимости вы можете позже импортировать этот файл обратно (кнопка \"Импорт\"), чтобы восстановить проект или продолжить работу с аналогичной конфигурацией."
            },
            "step-3": {
                "title": "Шаг 3",
                "text": "Нажмите кнопку «Запуск обучения», чтобы начать процесс. Во время обучения отображаются логи и интерактивные графики потерь и метрик в реальном времени для обучающей и валидационной выборок. Вы можете переключать отображение выборок на графике, кликая по соответствующей легенде. До завершения обучения экспорт модели и других файлов будет недоступен."
            },
            "step-4": {
                "title": "Шаг 4",
                "text": "После завершения обучения вы получите итоговые графики и логи. Теперь вы можете экспортировать модель в форматах HDF5, Keras и SavedModel. Также доступна генерация исполняемого Python-скрипта, содержащего инференс модели. Его можно встроить в систему или запускать напрямую из терминала вашей операционной системы."
            }
        },
        "copyright": "© 2025 Владимир Никулин. Все права защищены."
    },
    "main": {
        "title": "Главная",
        "copyright": "© 2025 Владимир Никулин. Все права защищены."
    }
}
